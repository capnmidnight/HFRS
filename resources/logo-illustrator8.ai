%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 19.0.1
%%For: (Sean McBeth) ()
%%Title: (logo.ai)
%%CreationDate: 9/15/2015 12:54 PM
%%Canvassize: 16383
%%BoundingBox: 12 -173 735 106
%%HiResBoundingBox: 12.2 -172.7211 735 105.1
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 376.5 -71.8 376.5 -71.8
%AI3_TileBox: 4.5 -353.3 754.5 216.7
%AI3_DocumentPreview: None
%AI5_ArtSize: 753 384
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -268 379.7 1 1375 866 26 0 0 116 160 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-182 -336.3
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 52 8
%%BeginData: 7258 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD7FFF39FD7EFF3916FD7CFFAE161616FD7BFF8916161639FD7AFF
%6416161664FD79FFAE3916161689FD79FFAE3F161616AEFD79FF83FD0416
%AEFD79FF8916161639FD7AFF3916161639FD7AFF391616165EFD79FFAEFD
%04165EFD79FFAE16FA161689FD79FF8916161639AEFD54FFAE89FD23FF64
%1616163FAEFD55FF641689FD20FFA83916161639AEFD55FFAE161616AEFD
%1EFFAE3F16161664FD57FFFD0516AEFD1CFF83FD041689FD57FF39FD0616
%FD1BFF5EFD0416AEFD57FF831616165E16161639FD19FF39FD0416AEFD57
%FFAE3F16165EFF891616165EFD17FF3916161639FD41FF5E16AEFD15FF39
%161639FFFFFF5E16161683FD14FFAEFD041639FD41FF6416161689FD13FF
%89161616AEFD04FF39161616AEFD12FF89FD04165EFD24FF7D525252A8FD
%08FFA8525252A8FFFF5252527DFD05FF5EFD051664AEFD04FF7D52527DFD
%08FFAE1616102D5252A8FFFFFF16161639AEFD10FF5EFD04165EFD0AFF7D
%275252FD17FF7DF82727A8FD08FF7D2727277DFFFF27272752FD04FF6416
%FA163F16FA163FAEFFFFFF27272752FD08FF39FA1633212727A8FFFFFFAE
%16FA163FFD0FFF6416FA161689FD0BFF52272752FD17FF7D272727A8FD08
%FFA8272727A8FFFF2727F852FFFFFF6416161689AE39FD04165EFFFF5227
%2752FD07FF5E16163F58272727A8FD04FF8916161664FD0CFFA839161616
%39AEFD0CFF52272727FD17FF7D272727A8FD08FF7D2727277DFFFFA87DA8
%A8FFFF6416161689FFFFFF64FD041639FF5227277DFD06FFAE16161689A8
%272727A8FD05FF8916161689FD0AFF89FD04163FAEFD0DFF52272752FD17
%FF7D2727277DFD08FFA82727F8A8FD06FFCF6416161689FD05FF89FD0516
%52272752FD06FF39161639FF7D2727277DFD06FF6416FA1689FD08FF5EFD
%041664FD0FFF52272727FD17FFA8272727A8FD08FF7D2727277DFFFFA87D
%A8A86416161689FFFFFD04A8CBAE171616162D4C277DFFFFA8A8A25F16FA
%16AEFFA8272727A8FD04FFA8A87D33101616FD05FF7DA858FA16161033A2
%CBFD08FFA8A87DA8A8FF52272752FD17FF7D272727A8FD08FFA8272727A8
%FFFF2727212D161616897D52FD0727520B16162D272752A85227F827272D
%1089FFFF7D272727A8FFA852FD0427214C27272DFFFFFFA2272027163327
%2721272752A8FD05FF52272727F8272752272727FD17FF7D272727A8FD08
%FF7D2727277DFFFF52274C0B16168952FD0A27776416274C2752FD052752
%2727A8FFFF7D275227A8FFFFFD07274C27272EFFFF84274C272D274CFD06
%27A8FFFFFF52FD0827522752FD17FF7D27272752FD097D272727A8FFFF27
%27272D168952FD0427525252FD042752FF832DFD0527522DFD042752FFFF
%7D272727A8FFA8272752527D5252FD0427588910FD06275252272727F87D
%FFFF52FD0427525252FD0527FD17FF7D2752FD0B275227277DFFFF52274C
%0B89CB52272727A8FD04FF5227277DFFFF5227274C2D39393F102E272727
%FFFF7D275227A8FFFFA8FD06FF7D2727273316172752272752FFFFFF7D52
%272752FFFF52275227A8FFFFFFA827272752FD17FF7DFD1027A8FF5E2727
%2752FF7DF827277DFD05FF52272752FFFF52274B05FD05160A4C2727A8FF
%7D272727A8FD09FFA82727270AFA1027272752FD05FF52272727FFA82727
%F87DFD05FF52272727FD17FF7D272727525252275252522752FD04277D64
%162D272752FF52272752A8FD05FF5227277DFFFF5227272EFD0516582727
%27FFFF7D272727A8FD04FFFD067D2752273316172727277DFD05FF7D2727
%27FF7D2727277DFD05FF52272752FD17FF7D2727277DFFA8FFA8FFA8FFFF
%7D27272733161627272752FF52272727FD06FF52272752FFFF5227275289
%161616897D272727A8FF7D2727277DFFFF7DFD0427F8FD05270AFA342727
%2752FD05FF52272752FF7DF82727A8FD05FF52272727FD17FFA8272727A8
%FD08FFA827274C10FA1652272752FF52272752FD06FF5227277DFFFF5227
%277DFFFF163FFFA2275227FFFFA8272727A8FF7D27522727275227272752
%2734AECB2727277DFD05FF7D275227FF7D272727A8FD05FF52272752FD09
%FF165E83FD0BFF7D272727A8FD08FFA827272711168327272752FF7D2727
%27FD06FF52272752FFFF52272752FFFFAEA8FF7D272727A8FF7D272727A8
%FF272727527DFFA8A87D27272752FFA827272752FD05FF52272752FFA827
%27277DFD05FF52272727FD09FFFD04166489FD08FF7D275227A8FD08FF7D
%2727271089FF52272752FF7D2727277DFD05FF5227277DFFFF5227277DFD
%05FF7D272727FFFF7D275227A8A82727277DFD05FF2727277DFFA8275227
%7DFD05FF7D272727FFA827272752FD05FF52272752FD09FFFD07165E83FD
%05FF7D272727A8FD08FF582127277DFFFF2727F852FFA8F82727277DFFFF
%FF7D27272752FFFF52272752FD05FF7D272727A8FF7D272727A8A82727F8
%7DFD04FF7D27272752FFA827272752FD05FF52272727A8FFFD04277DFFFF
%FFA852F82727FD09FFAE391616FA161616FA3989AEFFFFA2275227A8FD07
%FF64104C2727A1FFFF52272752FFFF5227522727275227272752277DFFFF
%5227277DFD05FFA8272727FFFF7D275227A8FF52272727A8A8A852522752
%277DFFA82752277DFD05FF7D272727FFFF7D27522727277D525227522752
%FD0BFFAE89FD0816398958272727A8FD06FF641611272727A8FFFF272727
%52FFFFA8FD0B2752FFFF52272752FD05FF7D272727A8FF7D272727A8FF52
%272727F8272727F827272752FFA827272752FD05FF52272727A8FFFF52F8
%FD0A27FD0EFF8964FD071633272727A9FD05FF6416FA102727277DFFFF27
%272752FFFFFFA852FD05275227522752FFFF2727F852FD05FF7DF82727FF
%FF7DF827F8A8FFFF52FD06277D5227F87DFFA82727F87DFD05FF52F82727
%FD04FF7DFD09277DFD11FF8339FD0416102D0A2D3389AEFFFF391616165E
%527D52A8FFFF527D527DFD05FFA87D7D7DA8A827272752FFFF7D527C7DFD
%05FF7D52527DA8FF7D525252A8FFFFFFFD057DA8FFFF7D7D7DFFA87D527C
%7DFD05FF7D52527DFD05FFA87D7D527D527DA8FFA8FD13FFAE5E3F16FA16
%FA16FA163F5E6416161689FD15FFA82752277DFFFFCBCBA9FD0BFFA9FD06
%FFCBFD04FFCBFD0BFFA9FD05FFCBFD07FFA9FD20FFAE8939FD0A1689FD0E
%FF7D7DA8FFA8FFA87DFD04277DFFA94F4E79A9FD09FF79A3FD06FF79FFFF
%FFA979FD09FFA94E794EFD04FF7979FFFFFFA9A9A979FD23FFAE8939FD06
%1689FD0FFF7DF8272752FD062752FFFFFF48CBFFA379CB79A37373A3CB72
%73A37979A97379A9A3A37979A9A3A37373A3CB4E73A3FF7273CBFFCB794F
%CB797979CB79A349A379FF7973A3A97373A3A97379FD1BFF835E16161689
%FD10FF52272727F8272727F82752FFFFFFA94948797879A279787378794E
%A378A34EA3A27348A3727948797E79787378734EA37279FFA94E7378794E
%A94E797273A9797873A9737279A373727978734E7378FD1EFF8989FD12FF
%525227522752277DA8FD05FF48FFFFA373A3797979CB7973A3A37979A979
%7373A379A379489D797979FF7379A39D79FFCBFFA3737979A979799D73A3
%4FA34FCB739D73CB737979CB73A97349A9FD34FFA8FFA8FD07FFCB73A9FF
%A97372A379FD04A34F48A972CB787372A378A97273A2A379A3A979A37324
%A3FFA94E7379FF7273A3A378A34E79A2797979A9794EA378A3A9797E7372
%FD5FFFA97373A3FD7CFFA8A3A9FD26FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Line artwork) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Sketch artwork) (IdeaFileFormat.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Fundraising Solutions) Ln
0 A
u
u
1 D
0 O
0.778744 0 1 0 0 0.733333 0.152941 Xa
0 J 0 j 1 w 10 M []0 d0 XR
514.6706 -69.7013 m
431.9225 27.669 L
360.8056 -72.0275 L
272.408 -8.22175 L
137.4853 -137.4949 L
12.2 -94.9578 L
12.2 -112.5708 L
137.4853 -158.7635 L
273.0726 -28.8257 L
363.1319 -97.6163 L
432.5871 2.08023 L
514.006 -94.2931 L
735 87.4869 L
735 105.1 L
514.6706 -69.7013 L
f
U
U
u
0 D
0.770108 0.620111 0 0 0.254902 0.411765 0.882353 Xa
340.2017 -138.8242 m
340.2017 -143.1444 L
327.9058 -143.1444 L
327.9058 -149.7909 L
339.537 -149.7909 L
339.537 -154.1111 L
327.9058 -154.1111 L
327.9058 -165.41 L
323.2533 -165.41 L
323.2533 -138.8242 L
340.2017 -138.8242 L
f
360.8056 -145.803 m
360.8056 -165.41 L
357.1501 -165.41 L
356.4854 -163.0837 L
354.1592 -164.7453 351.8329 -165.41 349.5067 -165.41 c
345.5188 -165.41 343.8572 -163.0837 343.8572 -158.4312 C
343.8572 -146.1353 L
348.5097 -146.1353 L
348.5097 -158.4312 L
348.5097 -160.4252 349.5067 -161.7544 351.1683 -161.7544 c
352.8299 -161.7544 354.1592 -161.0898 355.8208 -159.7605 C
355.8208 -146.1353 L
360.8056 -146.1353 L
360.8056 -145.803 L
f
365.4581 -165.41 m
365.4581 -145.803 L
369.1137 -145.803 L
369.7783 -148.7939 L
371.4399 -146.8 373.7661 -145.803 376.0924 -145.803 c
380.7449 -145.803 382.7388 -148.1292 382.7388 -153.1141 C
382.7388 -165.41 L
378.0863 -165.41 L
378.0863 -153.1141 L
378.0863 -151.1202 377.0894 -149.7909 375.0954 -149.7909 c
373.4338 -149.7909 372.1045 -150.4555 370.4429 -151.7848 C
370.4429 -165.41 L
365.4581 -165.41 L
f
*u
404.0075 -164.0807 m
401.0166 -164.7453 398.358 -165.41 395.3671 -165.41 c
389.3853 -165.41 386.0621 -162.0868 386.0621 -155.4403 c
386.0621 -149.1262 389.053 -146.1353 395.0348 -146.1353 c
396.3641 -146.1353 397.6933 -146.4676 399.0226 -147.1323 C
399.0226 -138.8242 L
403.6751 -138.8242 L
403.6751 -164.0807 L
404.0075 -164.0807 L
f
1 D
399.3549 -151.1201 m
398.358 -150.4555 397.0287 -150.1232 395.6994 -150.1232 c
392.7085 -150.1232 391.3792 -151.7848 391.3792 -155.108 c
391.3792 -159.0958 393.0408 -161.0898 396.0317 -161.0898 c
397.361 -161.0898 398.358 -160.7575 399.6873 -160.4252 C
399.6873 -151.1201 L
399.3549 -151.1201 L
f
*U
0 D
408.66 -165.41 m
408.66 -145.803 L
412.3155 -145.803 L
412.9802 -148.1292 L
414.6418 -146.4676 416.3034 -145.803 418.2973 -145.803 C
418.2973 -149.7908 L
416.6357 -149.7908 414.9741 -150.4555 413.6448 -152.1171 C
413.6448 -165.41 L
408.66 -165.41 L
f
*u
419.9589 -159.4282 m
419.9589 -155.4403 422.6175 -153.7787 428.2669 -153.7787 c
429.5962 -153.7787 430.9255 -153.7787 432.2548 -154.111 C
432.2548 -152.7817 L
432.2548 -151.1201 430.9255 -150.1232 428.5992 -150.1232 c
426.6053 -150.1232 424.279 -150.4555 421.6204 -151.1201 C
421.6204 -147.1323 L
424.279 -146.4676 426.6053 -146.1353 428.5992 -146.1353 c
434.2487 -146.1353 436.9073 -148.1292 436.9073 -152.4494 C
436.9073 -165.41 L
434.2487 -165.41 L
432.5871 -163.7484 L
430.9255 -164.7453 429.2639 -165.41 427.2699 -165.41 c
422.2852 -165.41 419.9589 -163.4161 419.9589 -159.4282 c
f
1 D
428.2669 -156.7696 m
425.9407 -156.7696 424.9437 -157.4343 424.9437 -159.0959 c
424.9437 -160.7575 425.9407 -161.7544 427.9346 -161.7544 c
429.5962 -161.7544 430.9255 -161.0898 432.2548 -160.0928 C
432.2548 -157.1019 L
430.9255 -157.1019 429.5962 -156.7696 428.2669 -156.7696 c
f
*U
*u
0 D
446.2123 -138.8242 m
446.2123 -142.8121 L
441.5599 -142.8121 L
441.5599 -138.8242 L
446.2123 -138.8242 L
f
446.2123 -145.803 m
446.2123 -165.41 L
441.5599 -165.41 L
441.5599 -145.803 L
446.2123 -145.803 L
f
*U
450.5325 -164.413 m
450.5325 -160.4252 L
452.5265 -161.4221 455.185 -161.7544 457.8436 -161.7544 c
459.8376 -161.7544 460.8345 -161.0898 460.8345 -159.7605 c
460.8345 -158.4312 460.1698 -157.7666 458.8405 -157.7666 C
455.5173 -157.7666 L
451.5295 -157.7666 449.8678 -155.7727 449.8678 -151.7848 c
449.8678 -147.7969 452.5264 -145.803 458.1759 -145.803 c
460.5021 -145.803 462.8284 -146.1353 464.8223 -146.8 C
464.8223 -150.7878 L
462.8284 -149.7908 460.5021 -149.4585 457.8436 -149.4585 c
455.185 -149.4585 453.8557 -150.1232 453.8557 -151.4525 c
453.8557 -152.7817 454.5203 -153.4464 456.1819 -153.4464 C
459.1728 -153.4464 L
463.493 -153.4464 465.4869 -155.4403 465.4869 -159.4282 c
465.4869 -163.416 462.8283 -165.41 457.5112 -165.41 C
455.185 -165.7423 452.5264 -165.0777 450.5325 -164.413 C
f
*u
473.7951 -138.8242 m
473.7951 -142.8121 L
469.1426 -142.8121 L
469.1426 -138.8242 L
473.7951 -138.8242 L
f
473.7951 -145.803 m
473.7951 -165.41 L
469.1426 -165.41 L
469.1426 -145.803 L
473.7951 -145.803 L
f
*U
478.4475 -165.41 m
478.4475 -145.803 L
482.1031 -145.803 L
482.7677 -148.7939 L
484.4294 -146.8 486.7556 -145.803 489.0818 -145.803 c
493.7343 -145.803 495.7283 -148.1292 495.7283 -153.1141 C
495.7283 -165.41 L
491.0758 -165.41 L
491.0758 -153.1141 L
491.0758 -151.1202 490.0788 -149.7909 488.0849 -149.7909 c
486.4233 -149.7909 485.094 -150.4555 483.4324 -151.7848 C
483.4324 -165.41 L
478.4475 -165.41 L
f
*u
516.9969 -164.0807 m
516.9969 -169.7302 513.6737 -172.7211 507.0272 -172.7211 c
504.701 -172.7211 502.7071 -172.3887 500.7132 -171.7241 C
500.7132 -167.7362 L
502.7071 -168.4009 504.701 -168.7332 507.0272 -168.7332 c
510.3505 -168.7332 512.3444 -167.4039 512.3444 -164.413 C
511.0151 -165.0776 509.3535 -165.41 507.6919 -165.41 c
502.0425 -165.41 499.3839 -162.0868 499.3839 -155.7726 c
499.3839 -149.4585 502.7071 -146.1353 509.3535 -146.1353 c
511.6798 -146.1353 514.3384 -146.4676 517.3292 -146.7999 C
517.3292 -164.0807 L
516.9969 -164.0807 L
f
1 D
512.3444 -150.4555 m
511.6797 -150.1232 510.3504 -150.1232 509.0211 -150.1232 c
505.6979 -150.1232 504.0363 -152.1171 504.0363 -155.7726 c
504.0363 -159.4282 505.3656 -161.0898 508.3565 -161.0898 c
509.6858 -161.0898 511.0151 -160.7575 512.3444 -160.0928 C
512.3444 -150.4555 L
f
*U
0 D
529.6251 -164.413 m
529.6251 -160.0928 L
532.2837 -161.0898 535.2746 -161.4221 538.2655 -161.4221 c
542.2533 -161.4221 544.2473 -160.0928 544.2473 -157.4343 c
544.2473 -155.4403 542.918 -154.4434 540.5917 -154.4434 C
536.6039 -154.4434 L
531.2867 -154.4434 528.6282 -152.1171 528.6282 -147.1323 c
528.6282 -141.8151 532.2837 -138.8242 539.9271 -138.8242 c
542.918 -138.8242 545.5765 -139.1566 548.2351 -140.1535 C
548.2351 -144.4737 L
545.5765 -143.4767 542.918 -143.1444 539.9271 -143.1444 c
535.6069 -143.1444 533.2807 -144.4737 533.2807 -147.1323 c
533.2807 -149.1262 534.2776 -150.1232 536.2715 -150.1232 C
540.2594 -150.1232 L
545.9088 -150.1232 548.5674 -152.4494 548.5674 -157.4343 c
548.5674 -163.0837 544.9119 -165.7423 537.9331 -165.7423 c
535.2746 -165.7423 532.2837 -165.0777 529.6251 -164.413 C
f
*u
551.8907 -155.7726 m
551.8907 -149.1262 554.8816 -146.1353 561.1957 -146.1353 c
567.5099 -146.1353 570.5007 -149.4585 570.5007 -155.7726 c
570.5007 -162.4191 567.5099 -165.41 561.1957 -165.41 c
554.8816 -165.41 551.8907 -162.0868 551.8907 -155.7726 c
f
1 D
561.1957 -161.7544 m
564.1865 -161.7544 565.8482 -159.7605 565.8482 -155.7726 c
565.8482 -151.7848 564.1865 -149.7908 561.1957 -149.7908 c
558.2048 -149.7908 556.5432 -151.7848 556.5432 -155.7726 c
556.5432 -159.7605 558.2048 -161.7544 561.1957 -161.7544 c
f
*U
0 D
579.1411 -138.8242 m
579.1411 -165.41 L
574.4886 -165.41 L
574.4886 -138.8242 L
579.1411 -138.8242 L
f
600.742 -145.803 m
600.742 -165.41 L
597.0864 -165.41 L
596.4218 -163.0837 L
594.0956 -164.7453 591.7693 -165.41 589.443 -165.41 c
585.4552 -165.41 583.7936 -163.0837 583.7936 -158.4312 C
583.7936 -146.1353 L
588.446 -146.1353 L
588.446 -158.4312 L
588.446 -160.4252 589.443 -161.7544 591.1046 -161.7544 c
592.7662 -161.7544 594.0955 -161.0898 595.7571 -159.7605 C
595.7571 -146.1353 L
600.742 -146.1353 L
600.742 -145.803 L
f
604.7298 -142.8121 m
608.3854 -142.8121 L
609.05 -145.803 L
613.7025 -145.803 L
613.7025 -149.7908 L
609.7147 -149.7908 L
609.7147 -158.7635 L
609.7147 -160.4252 610.3793 -161.4221 612.0409 -161.4221 C
614.0349 -161.4221 L
614.0349 -165.41 L
609.7147 -165.41 L
606.3915 -165.41 605.0622 -163.7484 605.0622 -160.0928 C
605.0622 -142.8121 L
604.7298 -142.8121 L
f
*u
622.0106 -138.8242 m
622.0106 -142.8121 L
617.3581 -142.8121 L
617.3581 -138.8242 L
622.0106 -138.8242 L
f
622.0106 -145.803 m
622.0106 -165.41 L
617.3581 -165.41 L
617.3581 -145.803 L
622.0106 -145.803 L
f
*U
*u
625.3338 -155.7726 m
625.3338 -149.1262 628.3247 -146.1353 634.6388 -146.1353 c
640.953 -146.1353 643.9438 -149.4585 643.9438 -155.7726 c
643.9438 -162.4191 640.953 -165.41 634.6388 -165.41 c
628.657 -165.41 625.6661 -162.0868 625.3338 -155.7726 C
f
1 D
634.9712 -161.7544 m
637.962 -161.7544 639.6236 -159.7605 639.6236 -155.7726 c
639.6236 -151.7848 637.962 -149.7908 634.9712 -149.7908 c
631.9803 -149.7908 630.3187 -151.7848 630.3187 -155.7726 C
630.3186 -159.7605 631.9802 -161.7544 634.9712 -161.7544 c
f
*U
0 D
647.9317 -165.41 m
647.9317 -145.803 L
651.5872 -145.803 L
652.2519 -148.7939 L
653.9135 -146.8 656.2397 -145.803 658.566 -145.803 c
663.2185 -145.803 665.2124 -148.1292 665.2124 -153.1141 C
665.2124 -165.41 L
660.5599 -165.41 L
660.5599 -153.1141 L
660.5599 -151.1202 659.563 -149.7909 657.5691 -149.7909 c
655.9074 -149.7909 654.5782 -150.4555 652.9166 -151.7848 C
652.9166 -165.41 L
647.9317 -165.41 L
f
669.5326 -164.413 m
669.5326 -160.4252 L
671.5266 -161.4221 674.1851 -161.7544 676.8437 -161.7544 c
678.8376 -161.7544 679.8346 -161.0898 679.8346 -159.7605 c
679.8346 -158.4312 679.1699 -157.7666 677.8406 -157.7666 C
674.5174 -157.7666 L
670.5295 -157.7666 668.8679 -155.7727 668.8679 -151.7848 c
668.8679 -147.7969 671.5265 -145.803 677.176 -145.803 c
679.5022 -145.803 681.8285 -146.1353 683.8224 -146.8 C
683.8224 -150.7878 L
681.8285 -149.7908 679.5022 -149.4585 676.8436 -149.4585 c
674.185 -149.4585 672.8558 -150.1232 672.8558 -151.4525 c
672.8558 -152.7817 673.5204 -153.4464 675.182 -153.4464 C
678.1729 -153.4464 L
682.4931 -153.4464 684.487 -155.4403 684.487 -159.4282 c
684.487 -163.416 681.8284 -165.41 676.5113 -165.41 C
674.1851 -165.7423 671.8588 -165.0777 669.5326 -164.413 C
f
U
u
0.685664 0.619165 0.609613 0.521141 0.227451 0.227451 0.227451 Xa
94.2835 -131.5132 m
94.2835 -21.5146 L
114.5551 -21.5146 L
114.5551 -67.0427 L
168.7236 -67.0427 L
168.7236 -21.5146 L
188.9952 -21.5146 L
188.9952 -131.5132 L
168.7236 -131.5132 L
168.7236 -84.6558 L
114.5551 -84.6558 L
114.5551 -131.5131 L
94.2835 -131.5132 L
f
*u
224.886 -21.5146 m
224.886 -37.7984 L
204.282 -37.7984 L
204.282 -21.5146 L
224.886 -21.5146 L
f
224.886 -50.7589 m
224.886 -131.5132 L
204.282 -131.5132 L
204.282 -50.7589 L
224.886 -50.7589 L
f
*U
*u
310.2927 -125.5314 m
310.2927 -149.1262 296.0028 -161.0898 267.7555 -161.0898 c
257.7858 -161.0898 248.8132 -159.7605 241.1697 -157.1019 C
241.1697 -140.8182 L
249.1455 -143.4767 257.7858 -144.806 267.7555 -144.806 c
282.3777 -144.806 289.6887 -138.4919 289.6887 -126.196 C
283.7069 -128.8546 277.0605 -130.1838 270.0817 -130.1838 c
246.1546 -130.1838 234.191 -117.2233 234.191 -90.9699 c
234.191 -64.3841 248.1485 -51.0912 276.0635 -51.0912 c
285.3685 -51.0912 296.6675 -52.0882 309.9603 -54.4145 C
309.9603 -125.5314 L
310.2927 -125.5314 L
f
1 D
290.0211 -69.0366 m
286.6979 -67.7074 282.0453 -67.0427 275.7312 -67.0427 c
261.7737 -67.0427 254.4626 -74.6861 254.4626 -90.3053 c
254.4626 -105.2597 260.4444 -112.9031 272.7403 -112.9031 c
278.7221 -112.9031 284.3716 -111.5739 290.021 -108.583 C
290.0211 -69.0366 L
f
*U
0 D
323.5856 -131.5132 m
323.5856 -21.5146 L
343.8572 -21.5146 L
343.8572 -61.0609 L
350.1713 -54.0822 358.4794 -50.7589 368.1167 -50.7589 c
387.3914 -50.7589 396.6964 -60.7286 396.6964 -80.6679 C
396.6964 -131.5132 L
376.4248 -131.5132 L
376.4248 -80.6679 L
376.4248 -71.6952 372.1046 -67.375 363.1319 -67.375 c
356.4854 -67.375 350.1713 -70.0336 343.8572 -75.3508 C
343.8572 -131.8455 L
323.5856 -131.8455 L
323.5856 -131.5132 L
f
430.9255 -21.5146 m
430.9255 -131.5132 L
410.3216 -131.5132 L
410.3216 -21.5146 L
430.9255 -21.5146 L
f
*u
440.2305 -106.2567 m
440.2305 -90.3052 451.8618 -81.9972 475.4567 -81.9972 c
481.1061 -81.9972 486.4233 -82.6618 492.0728 -83.6588 C
492.0728 -77.677 L
492.0728 -70.3659 486.7556 -66.7104 476.4536 -66.7104 c
467.481 -66.7104 457.8436 -68.0396 446.877 -70.6982 C
446.877 -54.4144 L
457.5113 -51.7559 467.481 -50.4266 476.4536 -50.4266 c
500.3808 -50.4266 512.3444 -59.3993 512.3444 -77.0123 C
512.3444 -131.1808 L
500.3808 -131.1808 L
493.0697 -123.8697 L
486.091 -128.8545 478.1153 -131.1808 469.8072 -131.1808 C
450.2002 -131.5132 440.2305 -123.2051 440.2305 -106.2567 c
f
1 D
475.4567 -95.9547 m
465.487 -95.9547 460.8345 -99.2779 460.8345 -105.9244 c
460.8345 -113.2354 464.8224 -116.5587 473.1304 -116.5587 c
479.7769 -116.5587 486.091 -114.5647 492.0728 -110.2445 C
492.0728 -97.284 L
486.7556 -96.6194 481.1061 -95.9547 475.4567 -95.9547 c
f
*U
0 D
525.3049 -131.5132 m
525.3049 -50.7589 L
541.2564 -50.7589 L
543.915 -62.7225 L
551.5584 -54.7468 560.5311 -50.7589 570.5007 -50.7589 c
589.7754 -50.7589 599.0804 -60.7286 599.0804 -80.6679 C
599.0804 -131.5132 L
578.8088 -131.5132 L
578.8088 -80.6679 L
578.8088 -71.6952 574.4886 -67.375 565.5159 -67.375 c
558.8695 -67.375 552.5554 -70.0336 546.2412 -75.3508 C
546.2412 -131.8455 L
525.3049 -131.8455 L
525.3049 -131.5132 L
f
*u
683.8225 -126.5283 m
671.5266 -129.8516 659.2307 -131.5132 647.5994 -131.5132 c
621.346 -131.5132 608.3854 -117.5557 608.3854 -89.3083 c
608.3854 -63.3872 621.0136 -50.4266 646.6024 -50.4266 c
651.9196 -50.4266 657.5691 -51.7559 663.2185 -54.4145 C
663.2185 -21.1823 L
683.4902 -21.1823 L
683.4902 -126.5283 L
683.8225 -126.5283 L
f
1 D
663.5508 -71.6952 m
659.2306 -69.0366 653.9135 -67.375 647.5993 -67.375 c
634.9711 -67.375 628.657 -74.3538 628.657 -88.6436 c
628.657 -105.5921 635.3034 -113.9001 648.5963 -113.9001 c
653.9135 -113.9001 658.8983 -113.2355 663.5508 -111.5739 C
663.5508 -71.6952 L
f
*U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
